--1) Create a data base in Hive (DATABASE NAME: BDHS_PROJECT)
--i. Stock_prices
--ii. Stock_companies


create database BDHS_PROJECT_aj;

use BDHS_PROJECT_aj;

--Check the TABLE description: STOCK_PRICES

drop table if exists STOCK_PRICES;
create external table STOCK_PRICES 
(
Trading_date Date,
Symbol String,
Open double,
Close_ double,
Low double,
High double,
Volume int
)
row format delimited fields terminated by ','
lines terminated by '\n' 
location '/user/anabig114249/STOCK_PRICES_table'
;

load data inpath '/user/anabig114249/project_STOCK_PRICES/StockPrices.csv' into table STOCK_PRICES;

ALTER TABLE STOCK_PRICES
SET TBLPROPERTIES ("skip.header.line.count"="1");

drop table if exists STOCK_COMPANIES;
create external table STOCK_COMPANIES 
(
Symbol String,
Company_name String,
Sector String,
Sub_industry String,
Headquarter String
)
row format delimited fields terminated by ','
lines terminated by '\n' 
location '/user/anabig114249/STOCK_COMPANIES_table'
;

load data inpath '/user/anabig114249/project_STOCK_PRICES/Stockcompanies.csv' into table STOCK_COMPANIES;


ALTER TABLE STOCK_COMPANIES
SET TBLPROPERTIES ("skip.header.line.count"="1");





create table STOCK_PRICES1 as select * from STOCK_PRICES;
create table STOCK_PRICES2 as select * from STOCK_PRICES;
create table STOCK_PRICES3 as select * from STOCK_PRICES;


create table STOCK_COMPANIES1 as select * from STOCK_COMPANIES;
create table STOCK_COMPANIES2 as select * from STOCK_COMPANIES;
create table STOCK_COMPANIES3 as select * from STOCK_COMPANIES;






/*2) Create a new hive table with the following fields by joining the above two hive tables.
Please use appropriate Hive built-in functions for columns (a,b,e and h to l).
 Trading_year: Should contain YYYY for each record
 Trading_month: Should contain MM or MMM for each record
 Symbol: Ticker code
 CompanyName: Legal name of the listed company
 State: State to be extracted from headquarters value.
 Sector: Business vertical of the listed company
 Sub_Industry: Business domain of the listed company within a sector
 Open: Average of intra-day opening price by month and year for each listed company
 Close: Average of intra-day closing price by month and year for each listed company
 Low: Average of intra-day lowest price by month and year for each listed company
 High: Average of intra-day highest price by month and year for each listed company
 Volume: Average of number of shares traded by month and year for each listed 
company
DATA ANALYSIS USING HIVE */




create table final_data as 


select t1.symbol,company_name,sector,sub_industry,split(headquarter,'[\;]')[1] as state , 
headquarter,open, close, low, high, volume,trading_year, trading_month  from stock_companies t1 

inner join 

(select symbol, year(trading_date) as trading_year, month(trading_date) as trading_month,
round(avg(open),2) as open, round(avg(close_),2) as close, round(avg(low),2) as low,
round(avg(high),2) as high,round(avg(volume),2) as volume from STOCK_PRICES2 
group by symbol,month(trading_date),year(trading_date)) t2 

on t1.symbol=t2.symbol; 






--3) Find the top five companies that are good for investment 




create table stock_table_temp as 

select company_name, min(trading_year) min_year,max(trading_year) max_year, min(trading_month) min_month, max(trading_month)
max_month from final_data group by company_name;

select * from stock_table_temp;


--Next we find the growth percent for each company over the years


select stock_start.company_name, ((close-open)/open)*100 growth_percent
from(select t1.company_name, open from final_data sd, stock_table_temp t1
where sd.trading_year = t1.min_year and sd.trading_month = t1.min_month and
sd.company_name = t1.company_name) stock_start, (select t1.company_name,
close from final_data sd, stock_table_temp t1
where sd.trading_year = t1.max_year and sd.trading_month = t1.max_month
and sd.company_name = t1.company_name) stock_end where
stock_start.company_name = stock_end.company_name sort by
growth_percent desc limit 5; 






--4) Show the best-growing industry by each state, having at least two or more industries mapped.

--i)First we calculate the growth of companies belonging to every state and capital.
create table stock_table_q4 as 

select state, sub_industry, stock_start.company_name, 
((stock_end.closestock_start.open)/stock_start.open)*100 growth_percent
from (select t1.company_name,open
 from final_data sd, stock_table_temp t1
 where sd.trading_year=t1.min_year and
 sd.trading_month=t1.min_month and
 sd.company_name=t1.company_name)stock_start,
 (select t1.company_name, close
 from final_data sd, stock_table_temp t1
 where sd.trading_year=t1.max_year and
 sd.trading_month=t1.max_month and
 sd.company_name=t1.company_name)stock_end,
 (select company_name, state, sub_industry
 from final_data
 group by company_name,state,sub_industry)sd
where (stock_end.close-stock_start.open)>0 and
 stock_start.company_name=stock_end.company_name and
 sd.company_name=stock_start.company_name;


select * from stock_table2 limit 5; 


--ii)Then we group by state and capital and filter industries listed atleast twice

final_data

create table q_4_2 as
select symbol,company_name,sector,sub_industry,split(headquarter,'[\;]')[1] as state , ((close-open)/open)*100 growth_percent from final_data  ;


create table q42_sol as

select state,sub_industry,
avg(growth_percent) ind_growth from q_4_2 group by state, sub_industry
having count(sub_industry>=2); 

Select * from q42_sol limit 10;


--iii)Finally we find the industry which has maximum growth by each state

select t3.state, sub_industry, ind_growth from q42_sol t3,
(select state,max(ind_growth) max_growth from q42_sol
group by state) max_ind where max_ind.state = t3.state and
 t3.ind_growth = max_ind.max_growth; 





--5) For each sector find the following.

--a. Worst year
--b. Best year
--c. Stable year


--i)AS a first step we find the growth for each sector and year


create table q5sol as 

select open.sector, open.trading_year,
(close-open) growth from 

(select sector,trading_year,avg(open) open from
final_data where trading_month = 1 group by sector,trading_year) open,
(select sector,trading_year,avg(close) close from final_data
where trading_month=12 group by sector,trading_year) close
where open.sector = close.sector and open.trading_year = close.trading_year;


select * from q5sol limit 5;


--ii)In the year 2011, 3 sectors attained their new low


select x.sector,x.trading_year,x.growth from q5sol x,
(select sector,min(growth) growth from q5sol
group by sector) y where x.sector=y.sector and
x.growth=y.growth;

--Year in which each of the sectors were worst hit


--iii)In the year 2016 and 2014 most of the sectors enjoyed a very high growth.


select a.sector,a.trading_year,a.growth from q5sol a,
(select b.sector,max(growth) growth from q5sol
group by sector) b where a.sector=b.sector and
a.growth=b.growth; 

